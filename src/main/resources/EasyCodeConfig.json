{
  "author" : "makejava",
  "version" : "1.2.7",
  "userSecure" : "",
  "currTypeMapperGroupName" : "Default",
  "currTemplateGroupName" : "MybatisPlus-Mixed",
  "currColumnConfigGroupName" : "Default",
  "currGlobalConfigGroupName" : "Default",
  "typeMapper" : { },
  "template" : {
    "MybatisPlus-Mixed" : {
      "name" : "MybatisPlus-Mixed",
      "elementList" : [ {
        "name" : "controller.java.vm",
        "code" : "##导入宏定义\n$!{define.vm}\n##去掉表的t_前缀\n$!tableInfo.setName($tool.getClassName($tableInfo.obj.name.replaceFirst(\"t_\",\"\")))\n##设置表后缀（宏定义）\n#setTableSuffix(\"Controller\")\n\n##保存文件（宏定义）\n#save(\"/controller\", \"Controller.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"controller\")\n\n##定义服务名\n#set($serviceName = $!tool.append($!tool.firstLowerCase($!tableInfo.name), \"Service\"))\n\n##定义实体对象名\n#set($entityName = $!tool.firstLowerCase($!tableInfo.name))\n\n##设置表后缀\n#set($EntitySuffix = \"Entity\")\n\n##设置类全名\n#set($fullName = $tableInfo.name +  \"Entity\")\n\n##设置dao全名\n#set($daoName = $tableInfo.name +  \"Dao\")\n\n##设置service接口全名\n#set($serviceName = $tableInfo.name +  \"Service\")\n\n##设置service实现类接口全名\n#set($serviceImplName = $tableInfo.name +  \"ServiceImpl\")\n\nimport com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;\nimport com.baomidou.mybatisplus.extension.api.ApiController;\nimport com.baomidou.mybatisplus.extension.api.R;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport $!{tableInfo.savePackageName}.entity.$!fullName;\nimport $!{tableInfo.savePackageName}.service.$!{serviceName};\nimport org.springframework.web.bind.annotation.*;\nimport $!{tableInfo.savePackageName}.common.result.PageResult;\nimport $!{tableInfo.savePackageName}.common.result.PageReq;\nimport io.swagger.annotations.Api;\nimport $!{tableInfo.savePackageName}.common.result.Result;\nimport javax.annotation.Resource;\nimport java.io.Serializable;\nimport java.util.List;\nimport io.swagger.annotations.ApiOperation;\n##表注释（宏定义）\n#tableComment(\"表控制层\")\n@RestController\n@Api(tags = \"$!tool.firstLowerCase($!tableInfo.name)\")\n@RequestMapping(\"/$!tool.firstLowerCase($!tableInfo.name)\")\npublic class $!{tableName} {\n    /**\n     * 服务对象\n     */\n    @Resource\n    private $!{tableInfo.name}Service $!{serviceName};\n    \n    \n     /**\n     * \n     *\n     * @param \n     * @param \n     * @return \n     */\n    @RequestMapping(value = \"/search\",method = RequestMethod.GET)\n    @ApiOperation(value = \"分页带条件查询所有数据\")\n    public PageResult<Page<$!fullName>> search(PageReq req, $!fullName $!tool.firstLowerCase($!fullName)) {\n        return PageResult.success(this.$!{serviceName}.search(req, $!tool.firstLowerCase($!fullName)));\n    }\n    \n    \n    \n  \n    @RequestMapping(value = \"/queryId\",method = RequestMethod.GET)\n    @ApiOperation(value = \"通过主键查id\")\n    public Result<$!fullName> selectOne(@RequestParam(\"id\") Serializable id) {\n\n        $!fullName $!tool.firstLowerCase($!fullName) = $!{serviceName}.getBaseMapper().selectById(id);\n        return Result.success($!tool.firstLowerCase($!fullName));\n    }\n\n\n    @RequestMapping(value = \"/add\",method = RequestMethod.POST)\n    @ApiOperation(value = \"新增数据\")\n    public Result add(@RequestBody  $!fullName $!tool.firstLowerCase($!fullName)) {\n\n        $!{serviceName}.save($!tool.firstLowerCase($!fullName));\n        return Result.success();\n    }\n\n\n    @RequestMapping(value = \"/updateId\",method = RequestMethod.POST)\n    @ApiOperation(value = \"通过主键修改数据\")\n    public Result updateId(@RequestBody $!fullName $!tool.firstLowerCase($!fullName)) {\n        this. $!{serviceName}.updateById($!tool.firstLowerCase($!fullName));\n        return Result.success();\n    }\n\n\n    @RequestMapping(value = \"/deleteId\",method = RequestMethod.POST)\n    @ApiOperation(value = \"删除指定id数据\")\n    public Result deleteId(@RequestParam(\"id\") Serializable id) {\n        this. $!{serviceName}.removeById(id);\n        return Result.success();\n    }\n}\n"
      }, {
        "name" : "dao.java.vm",
        "code" : "##导入宏定义\n$!{define.vm}\n##去掉表的t_前缀\n$!tableInfo.setName($tool.getClassName($tableInfo.obj.name.replaceFirst(\"t_\",\"\")))\n##设置表后缀（宏定义）\n#setTableSuffix(\"Dao\")\n\n##设置表后缀\n#set($EntitySuffix = \"Entity\")\n\n##设置类全名\n#set($fullName = $tableInfo.name +  \"Entity\")\n\n##设置dao全名\n#set($daoName = $tableInfo.name +  \"Dao\")\n\n##保存文件（宏定义）\n#save(\"/dao\", \"Dao.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"dao\")\n\nimport java.util.List;\n\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport org.apache.ibatis.annotations.Param;\nimport $!{tableInfo.savePackageName}.entity.$!{fullName};\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\n\n##表注释（宏定义）\n#tableComment(\"表数据库访问层\")\npublic interface $!{daoName} extends BaseMapper<$!{fullName}> {\n\n    /**\n    * 批量新增数据（MyBatis原生foreach方法）\n    *\n    * @param entities List<$!{fullName}> 实例对象列表\n    * @return 影响行数\n    */\n    int insertBatch(@Param(\"entities\") List<$!{fullName}> entities);\n    \n    /**\n    * 批量新增或按主键更新数据（MyBatis原生foreach方法）\n    *\n    * @param entities List<$!{fullName}> 实例对象列表\n    * @return 影响行数\n    * @throws org.springframework.jdbc.BadSqlGrammarException 入参是空List的时候会抛SQL语句错误的异常，请自行校验入参\n    */\n    int insertOrUpdateBatch(@Param(\"entities\") List<$!{fullName}> entities);\n\n\n    /**\n    *  根据实体查进行搜索查询 只使用于String字段和 Integer 类型 其他类型传入无效\n    *  每个字段使用or链接条件\n    * @param \n    * @return \n    * @throws \n    */\n   Page<$!{fullName}> search(Page<$!{fullName}> page,@Param(\"map\") $!{fullName} entity);\n}\n"
      }, {
        "name" : "entity.java.vm",
        "code" : "##引入宏定义\n$!{define.vm}\n##去掉表的t_前缀\n$!tableInfo.setName($tool.getClassName($tableInfo.obj.name.replaceFirst(\"t_\",\"\")))\n##设置表后缀（宏定义）\n#setTableSuffix(\"Entity\")\n\n##设置表后缀\n#set($EntitySuffix = \"Entity\")\n\n##设置类全名\n#set($fullName = $tableInfo.name +  \"Entity\")\n\n\n##使用宏定义设置回调（保存位置与文件后缀）\n#save(\"/entity\", \"Entity.java\")\n\n##使用宏定义设置包后缀\n#setPackageSuffix(\"entity\")\n\n##使用全局变量实现默认包导入\n$!{autoImport.vm}\nimport java.io.Serializable;\nimport com.baomidou.mybatisplus.annotation.TableField;\nimport com.baomidou.mybatisplus.annotation.TableId;\nimport com.baomidou.mybatisplus.annotation.TableName;\nimport io.swagger.annotations.ApiModelProperty;\nimport lombok.Data;\nimport com.baomidou.mybatisplus.annotation.IdType;\n\n##使用宏定义实现类注释信息\n#tableComment(\"实体类\")\n@TableName(value = \"$!{tableInfo.obj.name}\")\n@Data\npublic class $!{fullName} implements Serializable {\n#foreach($column in $tableInfo.pkColumn)\n    #if(${column.comment})/**\n     * ${column.comment}\n     */#end\n    \n    @ApiModelProperty(value = \"$!{column.obj.comment}\") \n    @TableId(value = \"$!{column.name}\",type = IdType.#if($column.type == \"java.lang.String\")UUID#end#if($column.type == \"java.lang.Integer\")AUTO#end#if($column.type == \"java.lang.Long\")AUTO#end)\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n#end    \n    \n#foreach($column in $tableInfo.otherColumn)\n    #if(${column.comment})/**\n     * ${column.comment}\n     */#end\n    \n    @ApiModelProperty(value = \"$!{column.obj.comment}\") \n    @TableField(value = \"$!{column.obj.name}\")\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n#end\n\n    @TableField(exist = false)\n    private static final long serialVersionUID = $!tool.serial();\n}"
      }, {
        "name" : "mapper.xml.vm",
        "code" : "##引入mybatis支持\n$!{mybatisSupport.vm}\n##去掉表的t_前缀\n$!tableInfo.setName($tool.getClassName($tableInfo.obj.name.replaceFirst(\"t_\",\"\")))\n##设置表后缀\n#set($EntitySuffix = \"Entity\")\n\n##设置类全名\n#set($fullName = $tableInfo.name +  \"Entity\")\n\n##设置dao全名\n#set($daoName = $tableInfo.name +  \"Dao\")\n\n\n##设置保存名称与保存位置\n$!callback.setFileName($tool.append($!{tableInfo.name}, \"Mapper.xml\"))\n$!callback.setSavePath($tool.append($modulePath, \"/src/main/resources/mapper\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"$!{tableInfo.savePackageName}.dao.$!{daoName}\">\n\n    <resultMap type=\"$!{tableInfo.savePackageName}.entity.$!{fullName}\" id=\"BaseResultMap\">\n#foreach($column in $tableInfo.fullColumn)\n        <result property=\"$!column.name\" column=\"$!column.obj.name\" jdbcType=\"$!column.ext.jdbcType\"/>\n#end\n    </resultMap>\n    \n    \n    <sql id=\"Base_Column_List\">\n        #foreach($column in $tableInfo.fullColumn)$!{column.obj.name}#if($velocityHasNext),#end#end\n\n    </sql>\n\n    <!-- 批量插入 -->\n    <insert id=\"insertBatch\" keyProperty=\"$!pk.name\" useGeneratedKeys=\"true\">\n        insert into $!{tableInfo.obj.parent.name}.$!{tableInfo.obj.name}(#foreach($column in $tableInfo.otherColumn)$!column.obj.name#if($velocityHasNext), #end#end)\n        values\n        <foreach collection=\"entities\" item=\"entity\" separator=\",\">\n        (#foreach($column in $tableInfo.otherColumn)#{entity.$!{column.name}}#if($velocityHasNext), #end#end)\n        </foreach>\n    </insert>\n    <!-- 批量插入或按主键更新 -->\n    <insert id=\"insertOrUpdateBatch\" keyProperty=\"$!pk.name\" useGeneratedKeys=\"true\">\n        insert into $!{tableInfo.obj.parent.name}.$!{tableInfo.obj.name}(#foreach($column in $tableInfo.otherColumn)$!column.obj.name#if($velocityHasNext), #end#end)\n        values\n        <foreach collection=\"entities\" item=\"entity\" separator=\",\">\n            (#foreach($column in $tableInfo.otherColumn)#{entity.$!{column.name}}#if($velocityHasNext), #end#end)\n        </foreach>\n        on duplicate key update\n         #foreach($column in $tableInfo.otherColumn)$!column.obj.name = values($!column.obj.name) #if($velocityHasNext), #end#end)\n    </insert>\n##设置模板\n     <!-- 模糊查询 -->\n    <select id=\"search\" resultMap=\"BaseResultMap\">\n        select\n        <include refid=\"Base_Column_List\"/>\n        from $!{tableInfo.obj.name}\n        <if test=\"map != null\">\n            <where>\n#foreach($column in $tableInfo.otherColumn)#if($column.type == \"java.lang.String\")\n                <if test=\"map.$column.name != null and map.$column.name != ''\">\n                    or $column.obj.name = #{map.$column.name}\n                </if>\n#end#if($column.type == \"java.lang.Integer\")\n                <if test=\"map.$column.name != null\">\n                    or $column.obj.name = #{map.$column.name}\n                </if>\n#end#end\n            </where>\n        </if>\n    </select>     \n     \n</mapper>\n"
      }, {
        "name" : "serviceImpl.java.vm",
        "code" : "##导入宏定义\n$!{define.vm}\n##去掉表的t_前缀\n$!tableInfo.setName($tool.getClassName($tableInfo.obj.name.replaceFirst(\"t_\",\"\")))\n##设置表后缀（宏定义）\n#setTableSuffix(\"ServiceImpl\")\n\n##保存文件（宏定义）\n#save(\"/service/impl\", \"ServiceImpl.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"service.impl\")\n##设置表后缀\n#set($EntitySuffix = \"Entity\")\n\n##设置类全名\n#set($fullName = $tableInfo.name +  \"Entity\")\n\n##设置dao全名\n#set($daoName = $tableInfo.name +  \"Dao\")\n\n##设置service接口全名\n#set($serviceName = $tableInfo.name +  \"Service\")\n\n##设置service实现类接口全名\n#set($serviceImplName = $tableInfo.name +  \"ServiceImpl\")\n\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\nimport $!{tableInfo.savePackageName}.dao.$!{daoName};\nimport $!{tableInfo.savePackageName}.entity.$!{fullName};\nimport $!{tableInfo.savePackageName}.service.$!{serviceName};\nimport org.springframework.stereotype.Service;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport $!{tableInfo.savePackageName}.common.result.PageReq;\nimport $!{tableInfo.savePackageName}.dao.$!{daoName};\nimport javax.annotation.Resource;\n##表注释（宏定义）\n#tableComment(\"表服务实现类\")\n@Service(\"$!tool.firstLowerCase($tableInfo.name)Service\")\npublic class $!{serviceImplName} extends ServiceImpl<$!{daoName}, $!{fullName}> implements $!{serviceName} {\n\n    @Resource\n    private $!{daoName} $!tool.firstLowerCase($!daoName);\n    \n     /**\n     * 搜索分页查询\n     *\n     * @param req 页数\n     * @param $!tool.firstLowerCase($!fullName) 类实体\n     * @return 查询结果 \n     */\n    @Override\n    public Page<$!{fullName}> search(PageReq req, $!{fullName} $!tool.firstLowerCase($!fullName)) {\n\n        Page<$!{fullName}> page = new Page<>(req.getPage(),req.getPageSize());\n\n        return $!{tool.firstLowerCase($!daoName)}.search(page,$!tool.firstLowerCase($!fullName));\n    }\n}\n"
      }, {
        "name" : "service.java.vm",
        "code" : "##导入宏定义\n$!{define.vm}\n##去掉表的t_前缀\n$!tableInfo.setName($tool.getClassName($tableInfo.obj.name.replaceFirst(\"t_\",\"\")))\n##设置表后缀（宏定义）\n#setTableSuffix(\"Service\")\n\n##保存文件（宏定义）\n#save(\"/service\", \"Service.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"service\")\n\n##设置表后缀\n#set($EntitySuffix = \"Entity\")\n\n##设置类全名\n#set($fullName = $tableInfo.name +  \"Entity\")\n\n##设置dao全名\n#set($daoName = $tableInfo.name +  \"Dao\")\n\n##设置dao全名\n#set($serviceName = $tableInfo.name +  \"Service\")\n\nimport com.baomidou.mybatisplus.extension.service.IService;\nimport $!{tableInfo.savePackageName}.entity.$!fullName;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport $!{tableInfo.savePackageName}.common.result.PageReq;\n\n##表注释（宏定义）\n#tableComment(\"表服务接口\")\npublic interface $!{serviceName} extends IService<$!fullName> {\n     /**\n     * 搜索分页查询\n     *\n     * @param req 页数\n     * @param $!tool.firstLowerCase($!fullName) 类实体\n     * @return 查询结果 \n     */\n    Page<${fullName}> search(PageReq req,${fullName} $!tool.firstLowerCase($!fullName));\n    \n    \n}\n"
      } ]
    }
  },
  "columnConfig" : { },
  "globalConfig" : { }
}